name: Build

on:
  workflow_call:
    inputs:
      # Stage will be passed to Fastlane to prepare the the right build and sign it with the right certificate 
      # Alpha - Alpha build aka Feature build is built from a feature branch and will be deploied to Google Distribution
      # Beta - Alpha build aka Development build is built from a develop branch and will be deploied to Google Distribution
      # RC - RC build is built from release branch and will be deploied to the application stores 
      stage: 
        required: true
        type: string
      # Version will be set to the app and will be shown in Google distribution, application store as well as inside the app.
      # Versions can be either semantic (like 1.2.0) or Jira task key (IOS-123)
      version:
        required: true
        type: string
      # Buld number must be unique and incremented every run
      build_number:
        required: true
        type: string
      # Name that will be used for the artifact
      app_name: 
        required: true
        type: string
    
    secrets:
      # Token must have read access to all the submodule repositories
      GH_MOBILE_PAT:
        required: true

env:
  app_path: "fastlane/builds"

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
    # Clean build folder. Since this job runs on a self-hosted runner build folder has to be cleaned manually.
    - name: Clean
      run: rm -rf *
    
    # Check out git repositories and submodules.
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_MOBILE_PAT }}
    
    # Prepare enviroment with installing tools
    - name: Bundle install
      run: bundle install --jobs 4 --retry 3
    
    # Build app with Fastlane. Parameters: stage, build_number, version
    - name: Make Internal build
      if: ${{ inputs.stage }} == 'Alpha' ||  ${{ inputs.stage }} == 'Beta'
      run: bundle exec fastlane internal_build build:"${{ inputs.build_number }}" version:"${{ inputs.version }}" app_name:"${{ inputs.app_name }}"

    # Build app with Fastlane. Parameters: stage, build_number, version
    - name: Make External build
      if: ${{ inputs.stage }} == 'RC'
      run: bundle exec fastlane release_build build:"${{ inputs.build_number }}" version:"${{ inputs.version }}" app_name:"${{ inputs.app_name }}"
  
    # Upload artifact to be able to reuse in the following jobs 
    - name: Upload binary artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.app_name }}
        path: "${{ env.app_path }}/${{ inputs.app_name }}"
        if-no-files-found: error
