name: Jira - Set 'Next Release' version for the merged Jira task

on:
  workflow_call:
    inputs:
      next_version_name:
        required: true
        type: string
    secrets:
      JIRA_BASE_URL:
        required: true
      JIRA_USER_EMAIL:
        required: true
      JIRA_API_TOKEN:
        required: true

jobs:
  prepare:
    name: Prepare information
    runs-on: ubuntu-latest
    outputs:
      jira_issue_key: '${{ steps.jira.outputs.key }}'
    steps:
      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: '${{ secrets.JIRA_BASE_URL }}'
          JIRA_USER_EMAIL: '${{ secrets.JIRA_USER_EMAIL }}'
          JIRA_API_TOKEN: '${{ secrets.JIRA_API_TOKEN }}'

      - name: Get Jira Issue Key from Branch Name
        id: get-jira-issue-key
        uses: tangem/jira-action@master
        with:
          action: getBranchSummary
          branch-name: '${{ github.ref_name }}'

  set-jira-task-version:
    name: Prepare information
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: '${{ secrets.JIRA_BASE_URL }}'
          JIRA_USER_EMAIL: '${{ secrets.JIRA_USER_EMAIL }}'
          JIRA_API_TOKEN: '${{ secrets.JIRA_API_TOKEN }}'

      - name: Jira Check Version
        id: jira-check-version
        uses: tangem/jira-action@master
        with:
          action: 'checkVersion'
          project: 'IOS'
          version: '${{ inputs.next_version_name }}'

      - name: Jira Create Version
        if: ${{ steps.jira-check-version.outputs.result == 'false' }}
        uses: tangem/jira-action@master
        with:
          action: 'createVersion'
          project: 'IOS'
          version: '${{ inputs.next_version_name }}'

      - name: Jira Set Version To Issues
        uses: tangem/jira-action@master
        with:
          action: 'setVersionToIssues'
          project: 'IOS'
          version: '${{ inputs.next_version_name }}'
          # `setVersionToIssues` expects an array of Jira tasks as an argument, so we're creating such array here
          # Docs: To use a literal single quote, escape the literal single quote using an additional single quote ('')
          issues: ${{ fromJSON(format('[''{0}'']', needs.prepare.outputs.jira_issue_key)) }}
